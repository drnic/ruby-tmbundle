
rcodetools.el allows you to run rcodetools on a buffer.

To eval the sexp, type C-e C-x C-e; `end-of-line' and `eval-last-sexp'.

installation
============

If you use RI document feature, you must install ri-emacs first.
  http://rubyforge.org/projects/ri-emacs/

If you feel RI and ri-emacs.rb startup is SLOW, you want to install FastRI.
FastRI offers ri-emacs compatible layer, so you can use it with ri-ruby.el.
  http://eigenclass.org/hiki.rb?fastri

Copy <tt>rcodetools.el</tt> to the appropriate directory, which is in load-path.
Then require it.
  (require 'rcodetools)

If you use icicles copy <tt>icicles-rcodetools.el</tt> too.
Then require it.
  (require 'icicles-rcodetools)
It provides wonderful `help on candidate' feature, RI document on each candidate during completion.
I'm addicted to icicles!
  http://www.emacswiki.org/cgi-bin/wiki/Icicles

xmpfilter on buffer
===================

# [EVAL IT] (describe-function 'xmp)

If you want to add => marks, call comment-dwim twice.

# [EVAL IT] (describe-function 'comment-dwim)

method/class/constant completion
================================

# [EVAL IT] (describe-function 'rct-complete-symbol)

If you use icicles-rcodetools, you can browse RI document for selected candidate
by typing C-M-RET. It is wonderful icicles feature!!

show RI document / jump to the definition
=========================================

# [EVAL IT] (describe-function 'rct-ri)

By default rct-ri asks for a TAGS file, which is generated by tag generator like rtags.
If there is a TAGS file, this command jumps to the definition of current method.
If use do not use this feature, evaluate:
  (setq rct-find-tag-if-available nil)

# [EVAL IT] (describe-variable 'rct-find-tag-if-available)
